name: test

on:
  workflow_run:
    workflows: ["build"]
    types:
      - completed

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  unit-testing:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        uses: ./.github/actions/yarn-install
      - name: Run tests ðŸ§ª
        run: yarn test
  e2e-testing:
    needs:
      - unit-testing
    if: success()
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-playwright-
      - name: Install dependencies
        uses: ./.github/actions/yarn-install
      - name: Install Playwright
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: yarn create playwright install --with-deps
      - name: Build website
        run: yarn build
      - name: Run Playwright ðŸ§ª
        run: yarn e2e:build
